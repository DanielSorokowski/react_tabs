{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","currentTab","find","tab","id","tabElements","map","className","href","onClick","handleTabSelect","title","content","App","useState","selectedTab","setSelectedTab","findSelectedTab","ReactDOM","render","document","getElementById"],"mappings":"iMAQaA,EAA4B,SAAC,GAInC,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EAAaH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,MAAkBD,EAAK,GAOhEO,EAAcP,EAAKQ,KAAI,SAAAH,GAAG,OAC9B,oBACEI,UAAWN,EAAWG,KAAOD,EAAIC,GAAK,YAAc,GACpD,UAAQ,MAFV,SAKE,mBACEI,KAAI,WAAML,EAAIC,IACd,UAAQ,UACRK,QAAS,kBAfS,SAACN,GACnBJ,IAAkBI,EAAIC,IACxBJ,EAAcG,GAaGO,CAAgBP,IAHjC,SAKGA,EAAIQ,SAPFR,EAAIC,OAYb,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKG,UAAU,gBAAf,SACE,6BACGF,MAIL,qBAAKE,UAAU,QAAQ,UAAQ,aAA/B,SACGN,EAAWW,cCtCPd,EAAO,CAClB,CAAEM,GAAI,QAASO,MAAO,QAASC,QAAS,eACxC,CAAER,GAAI,QAASO,MAAO,QAASC,QAAS,eACxC,CAAER,GAAI,QAASO,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,MAAsCC,mBAAShB,EAAK,GAAGM,IAAvD,mBAAOW,EAAP,KAAoBC,EAApB,KAMMC,EAAkBnB,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOW,MAAgBjB,EAAK,GAEzE,OACE,sBAAKS,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,0CACsBU,QADtB,IACsBA,OADtB,EACsBA,EAAiBN,SAGvC,cAAC,EAAD,CACEb,KAAMA,EACNC,cAAegB,EACff,cAfgB,SAACG,GACrBa,EAAeb,EAAIC,WCdvBc,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.f8abae6c.chunk.js","sourcesContent":["import { Tab } from '../../Types/Tab';\n\ninterface TabsProps {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected: (tab: Tab) => void;\n}\n\nexport const Tabs: React.FC<TabsProps> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const currentTab = tabs.find(tab => tab.id === selectedTabId) || tabs[0];\n  const handleTabSelect = (tab: Tab) => {\n    if (selectedTabId !== tab.id) {\n      onTabSelected(tab);\n    }\n  };\n\n  const tabElements = tabs.map(tab => (\n    <li\n      className={currentTab.id === tab.id ? 'is-active' : ''}\n      data-cy=\"Tab\"\n      key={tab.id}\n    >\n      <a\n        href={`#${tab.id}`}\n        data-cy=\"TabLink\"\n        onClick={() => handleTabSelect(tab)}\n      >\n        {tab.title}\n      </a>\n    </li>\n  ));\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabElements}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {currentTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './Types/Tab';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState(tabs[0].id);\n\n  const onTabSelected = (tab: Tab) => {\n    setSelectedTab(tab.id);\n  };\n\n  const findSelectedTab = tabs.find(tab => tab.id === selectedTab) || tabs[0];\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${findSelectedTab?.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTab}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}